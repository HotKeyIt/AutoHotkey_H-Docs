<!DOCTYPE HTML> 
<html><head><title>FindLabel()</title>

<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />


<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>
<h1>FindLabel</h1>
<p>Finds a label in currently executed script and returns a pointer to it.</p>
<br>
<pre class="Syntax"><b>OutputVar</b> := <span class="func">FindLabel</span>(LabelName)<pre><em>Function Example:</em> <b>MyLabelPtr</b> := FindLabel("MyLabel")</pre></pre>
<h3>Parameters</h3>
<dl>
<dt><b>OutputVar</b></dt>
<dd>
<p>The name of the variable to store the label pointer in or 0 if the label was not found.</p>
</dd>
<dt>LabelName</dt>
<dd>
<p>The name of the label to find.</p>
</dd>
</dl>
<h3>Examples</h3>
<pre class="NoIndent">; AHK Structures
global _AHKDerefType := "LPTSTR marker,{_AHKVar *var,_AHKFunc *func},BYTE is_function,param_count,WORD length"
global _AHKExprTokenType := "{__int64 value_int64,double value_double,struct{{PTR *object,_AHKDerefType *deref,_AHKVar *var,LPTSTR marker},{LPTSTR buf,size_t marker_length, BOOL is_lvalue}}},UINT symbol,{_AHKExprTokenType *circuit_token, LPTSTR mem_to_free}"
global _AHKArgStruct := "BYTE type,bool is_expression,WORD length,LPTSTR text,_AHKDerefType *deref,_AHKExprTokenType *postfix"
global _AHKBreakPoint := "INT id,BYTE type,BYTE state,bool temporary"
global _AHKLine := "BYTE mActionType,mArgc,WORD mFileIndex,UINT mLineNumber,_AHKArgStruct *mArg,PTR *mAttribute,_AHKLine *mPrevLine,*mNextLine,*mRelatedLine,*mParentLine,_AHKBreakPoint *mBreakPoint"
global _AHKLabel := "PTR vTable,LPTSTR mName,_AHKLine *mJumpToLine,_AHKLabel *mPrevLabel,*mNextLabel"
global _AHKFuncParam := "_AHKVar *var,WORD is_byref,default_type,{LPTSTR default_str,Int64 default_int64,Double default_double}"
If (A_PtrSize = 8)
	global _AHKRCCallbackFunc := "UINT64 data1,data2,BYTE actual_param_count,create_new_thread,event_info,*_AHKFunc func"
else
	global _AHKRCCallbackFunc := "ULONG data1,data2,data3,data4,data5,BYTE actual_param_count,create_new_thread,event_info,*_AHKFunc func"
global _AHKFunc := "PTR vTable, LPTSTR mName, {PTR mBIF, _AHKLine *mJumpToLine},_AHKFuncParam *mParam, int mParamCount, mMinParamCount, PTR *mClass,_AHKVar **mGlobalVar, **mVar, **mLazyVar, **mStaticVar, **mStaticLazyVar, int mGlobalVarCount, mVarCount, mVarCountMax, mLazyVarCount, mStaticVarCount, mStaticVarCountMax, mStaticLazyVarCount, mInstances, BYTE mDefaultVarType, bool mIsBuiltIn, mIsVariadic, mPreprocessLocalVarsDone"
global _AHKVar := A_PtrSize ":{Int64 mContentsInt64,Double mContentsDouble,PTR mobject},{char *mByteContents,LPTSTR mCharContents},{UINT_PTR mLength,_AHKVar *mAliasFor},{UINT_PTR mByteCapacity,UINT_PTR mBIV},BYTE mHowAllocated,mAttrib,mScope,mType,LPTSTR mName"
MyLabel:=Struct(_AHKLabel,FindLabel("MyLabel"))
MsgBox % "Name:`t`t" MyLabel.mName "`nLine:`t`t" MyLabel.mJumpToLine.mLineNumber "`nArgCount:`t" MyLabel.mJumptoLine.mArgc "`nArg Text:`t`t" MyLabel.mJumptoLine.mArg.text
ExitApp
MyLabel:
MsgBox test
Return</pre>
</body></html>