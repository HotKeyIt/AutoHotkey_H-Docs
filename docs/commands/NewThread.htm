<!DOCTYPE HTML> 
<html><head><title>NewThread()</title>

<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />


<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>
<h1>NewThread</h1>
<p>Create a real additional AutoHotkey thread in current process without using AutoHotkey.dll (based on <a href="NewThread.htm">NewThread</a>).</p>
<br>
<pre class="Syntax"><b>OutputVar</b> := <span class="func">NewThread</span>(Script <span class="optional">, Parameters, Title, Wait, Library</span>)
<pre><em>Command  Example:</em> NewThread "MsgBox Message from thread."
<em>Function Example:</em> <b>Thread</b> := NewThread("MsgBox Message from thread.")</pre></pre>
<h3>Parameters</h3>
<dl>
  <dt><b>OutputVar</b></dt>
    <dd><p>The name of the variable in which to store the Thread object for newly created thread.</p>
    </dd>
<dt>Script</dt>
<dd>
<p>The AutoHotkey script to execute as string or variable containing a string. If you want to start a script from file simply use #Include directive. If you want to start empty script use <a href="_Persistent.htm">#Persistent</a>.</p>
</dd>
<dt>Parameters (optional)</dt>
<dd>
<p>Command line parameters that will be available in built-in variable <b>A_Args</b>
object.</p>
</dd>
<dt>Title (optional)</dt>
<dd>
<p>Title to use for new script.</p>
</dd>
<dt>Wait (optional)</dt>
<dd>
<p>Milliseconds to wait for new script to start.</p>
</dd>
<dt>Library (optional)</dt>
<dd>
<p>The library handle returned by LoadLibrary or path of AutoHotkey.dll to create new thread in AutoHotkey.dll instead current library.<br>This parameter must be also used when creating a new thread in main process (AutoHotkey.exe) from AutoHotkey.dll.</p>
</dd>
</dl>

<h3>General Remarks</h3>
<p>To return the script in a thread you can use A_LineFile.</p>
<dd>
<table>
<tr><b>Methods</b></tr>
<tr>
<td><a href="ahkFunction.htm">ahkFunction</a></td>
<td>Call a function via SendMessage method.</td>
</tr>
<tr>
<td><a href="ahkPostFunction.htm">ahkPostFunction</a></td>
<td>Call a function via PostMessage method (does not wait
until function returns).</td>
</tr>
<tr>
<td><a href="ahkExecuteLine.htm">ahkExecuteLine</a></td>
<td>Executes script from given line pointer.</td>
</tr>
<tr>
<td><a href="ahkLabel.htm">ahkLabel</a></td>
<td>Goto (PostMessage) or Gosub (SendMessage) a Label.</td>
</tr>
<tr>
<td><a href="ahkFindFunc.htm">ahkFindFunc</a></td>
<td>Find a function and return its pointer.</td>
</tr>
<tr>
<td><a href="ahkFindLabel.htm">ahkFindLabel</a></td>
<td>Find a label and return its pointer.</td>
</tr>
<tr>
<td><a href="addScript.htm">addScript</a></td>
<td>Add
and optionally execute additional script/code from
text/memory/variable.</td>
</tr>
<tr>
<td><a href="ahkExec.htm">ahkExec</a></td>
<td>Execute some script/code from text/memory/variable
temporarily.</td>
</tr>
<tr>
<td><a href="ahkassign.htm">ahkassign</a></td>
<td>Assign a value to variable or pointer of variable.</td>
</tr>
<tr>
<td><a href="ahkgetvar.htm">ahkgetvar</a></td>
<td>Retrieve a value from a variable.</td>
</tr>
<tr>
<td><a href="ahkPause.htm">ahkPause</a></td>
<td>Pause Script.</td>
</tr>
</table>
</dd>
</dl>
<h3>Related</h3>
<p><a href="NewThread.htm">NewThread</a>, <a href="ThreadObj.htm">ThreadObj</a></p>
<h3>Examples</h3>
<pre class="NoIndent">MyThread:=NewThread("Msgbox variable:=`"Thread`"")
While !Mythread.ahkReady()
  Sleep 100
MsgBox MyThread.ahkgetvar.variable</pre>
</body></html>