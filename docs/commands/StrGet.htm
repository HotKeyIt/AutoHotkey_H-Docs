<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <title>StrGet</title>
  <meta http-equiv="content-type" content="text/html; charset=iso-8859-1">
  <link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/jquery.js" type="text/javascript"></script>
<script src="../static/tree.jquery.js" type="text/javascript"></script>
<script src="../static/content.js" type="text/javascript"></script>
</head>

<body>
<h1>StrGet</h1>

<p>Copies a string to or from a memory address, optionally converting to or
from a given code page.</p>
<pre class="Syntax">StrGet, <strong>OutPutVar</strong>, Address [, Length, Encoding = <i>None</i>]<pre><em>Command  Example:</em> StrGet, <strong>string</strong>, %stringAddr%, 10, UTF-8<br><em>Function Example:</em> <strong>string</strong> := StrGet(stringAddr, 10, "UTF-8")</pre></pre>

<h3>Parameters</h3>
<dl>
  <dt>OutPutVar</dt>
    <dd><p>The name of the variable in which to store the read string.</p>
    </dd>
  <dt>Address</dt>
    <dd><p>The address at which the string will be written to/read from.</p>
    </dd>
  <dt>Length</dt>
    <dd><p>The maximum number of characters to read/write, including the
      null-terminator if required. See Return Value.</p>
    </dd>
  <dt>Encoding</dt>
    <dd><p>The source encoding for StrGet or target encoding for StrPut; for
      example, "UTF-8", "UTF-16" or "CP936". If <em>Address</em> and
      <em>Length</em> are not specified, numeric identifiers must be prefixed
      with "CP". Specify an empty string or "CP0" to use the system default
      ANSI code page.</p>
    </dd>
</dl>

<h3>Return Value</h3>

<p>Invalid parameters cause an empty string to be returned, otherwise returns
the requested string after performing any necessary conversion.</p>

<h3>Remarks</h3>

<p>Note that the return value of StrGet are always in the <a
href="../Compat.htm#Format">native encoding</a> of the current executable,
whereas <i>Encoding</i> specifies the encoding of the string written to or read
from the given <i>Address</i>. If no <em>Encoding</em> is specified, the string
is simply copied without any conversion taking place.</p>

<p>If conversion between code pages is necessary, the required buffer size may
differ from the size of the source <em>String</em>.</p>

<p>Scripts which are required to be compatible with AutoHotkey Basic can still
use StrGet provided that <a
href="http://www.autohotkey.com/forum/topic59738.html">the appropriate script
files</a> are installed in a <a href="../Functions.htm#lib">function
library</a>. These scripts can be found at the <a
href="http://www.autohotkey.com/forum/">AutoHotkey Community Forum</a>.</p>

<h3>Related</h3>

<p><a href="../Compat.htm">Script Compatibility</a>, <a href="StrPut.htm">StrPut</a>, <a href="StrPutVar.htm">StrPutVar</a>, <a href="FileEncoding.htm">FileEncoding</a>
, <a
href="VarSetCapacity.htm">VarSetCapacity()</a></p>

<h3>Examples</h3>

<p>Either <em>Length</em> or <em>Encoding</em> may be specified directly after
<em>Address</em>, but in those cases <em>Encoding</em> must be non-numeric:</p>
<pre class="NoIndent">strA := StrGet(addressA, "cp0")     <em>; OK</em>
strA := StrGet(addressA, length, 0) <em>; OK</em>
strA := StrGet(addressA, 0)         <em>; Error</em></pre>
</body>
</html>
