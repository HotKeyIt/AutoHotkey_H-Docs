<!DOCTYPE HTML>
<html>
<head>
<title>#InputLevel</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>#InputLevel</h1>
<p>Controls which artificial keyboard and mouse events are ignored by hotkeys and hotstrings.</p>
<pre class="Syntax">#InputLevel [, Level]</pre>

<h3>Parameters</h3>
<dl>

  <dt>Level</dt>
  <dd><p>An integer between 0 and 100. If omitted, it defaults to 0.</p></dd>

</dl>

<h3>General Remarks</h3>
<p>For an explanation of how SendLevel and #InputLevel are used, see <a href="SendLevel.htm">SendLevel</a>.</p>
<p>This directive is positional: it affects all hotkeys and hotstrings between it and the next #InputLevel directive. If not specified by an #InputLevel directive, hotkeys and hotstrings default to level 0.</p>
<p>A hotkey's input level can also be set using the Hotkey command. For example: <code>Hotkey, #z, my_hotkey_sub, <strong>I1</strong></code></p>
<p>The input level of a hotkey or non-auto-replace hotstring is also used as the default <a href="SendLevel.htm">send level</a> for any keystrokes or button clicks generated by that hotkey or hotstring. Since a keyboard or mouse <a href="../misc/Remap.htm">remapping</a> is actually a pair of hotkeys, this allows #InputLevel to be used to allow remappings to trigger other hotkeys.</p>
<p>AutoHotkey versions older than v1.1.06 behave as though #InputLevel 0 and SendLevel 0 are in effect.</p>

<h3>Related</h3>
<p><a href="SendLevel.htm">SendLevel</a>, <a href="../Hotkeys.htm">Hotkeys</a>, <a href="../Hotstrings.htm">Hotstrings</a></p>

<h3>Examples</h3>
<pre class="NoIndent">
#InputLevel 1
Numpad0::LButton
#InputLevel 0
<em>; This hotkey can be triggered by both Numpad0 and LButton:</em>
~LButton::Msgbox Clicked
</pre>

</body>
</html>
