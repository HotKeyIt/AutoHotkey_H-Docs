<!DOCTYPE HTML>>
<html><head><title>ahkTerminate</title>

<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />


<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>
<h1>ahkTerminate</h1>
<p>Exported function that exits script
currently executed by AutoHotkey module.<br>
<b>This function is only available in AutoHotkey.dll</b>
</p>
<br>
<pre class="Syntax"><b>OutputVar</b> := <span class="func">DllCall</span>("AutoHotkey.<b>dll</b>\ahkTerminate", "Int", Timeout, "Int")
<pre><em>Command  Example:</em> DllCall "AutoHotkey.<b>dll</b>\ahkTerminate", "Int", 500, "Int"
<em>Function Example:</em> DllCall("AutoHotkey.<b>dll</b>\ahkTerminate", "Int", 500, "Int")</pre></pre>
<h3>Parameters</h3>
<dl>
<dt><b>OutputVar</b></dt>
<dd>
<p>The name of the variable to store always 0 / false so can be ignored.</p>
</dd>
<dt>Timeout</dt>
<dd>
<p>Time to wait until thread exits, use FALSE / NULL / 0 = no Timeout. NOTE: using a <b>negative</b> vaue you can force exit after given Timeout, with a <b>positive</b> Timeout it might take longer to exit thread but assures a clean exit.</p>
</dd></dl>
<h3>Related</h3>
<p><a href="ahkPostFunction.htm">ahkPostFunction</a>,
<a href="ahkFindFunc.htm">ahkFindFunc</a>
</p>
<h3>Examples</h3>
<pre class="NoIndent">dllpath:=A_AhkDir "\AutoHotkey.dll"
DllCall("LoadLibrary","Str",dllpath) <em>; Load the AutoHotkey module.</em>
DllCall(dllpath "\ahktextdll","Str","MsgBox","Str","","CDecl") <em>; start a new thread.</em>
Sleep 1000
DllCall(dllpath "\ahkTerminate","UInt",0,"CDecl") <em>; terminate thread.</em>
MsgBox "End"

<em>; Same example like above using included AutoHotkey.dll</em>
dll:=AhkThread("MsgBox")
Sleep 1000
dll.ahkterminate[]
MsgBox "End"</pre>
</body></html>